[aexm] BRU (branch unconditional) does not properly forward its rD.
       For two cycles afterwards, the register that PC was written to
       (identified by rD) should not be read from, to ensure propagation
       of values.

[aexm] Future bug when the virtual memory system gets implemented: branch that
       is the last or next-to last instruction on a memory page will bug out
       if one of the two delay instructions (regardless if they are masked out
       or active) triggers a page fault. Aexm will lose track of the correct
       PC and/or will lose an instruction.

[hyper] When issuing DMA transactions, the low 5 bits of the address are masked
        out.

[hyper] After issuing the transaction, you must read the signal bits (top 16
        bits of the data) to verify the transaction has been acknowledged.
        The firmware reads signal bits and then writes them back.
  FIX: firmware should NEVER-EVER write into signal bits, except at the end
       of the transaction - to signal the outcome to the CPU.

[hyper] All transactions must be at least longer then a single transaction
        block. Otherwise, the firmware will never notice it already executed
        the transaction.
        Namely, the transaction is never marked as "started executing it".
